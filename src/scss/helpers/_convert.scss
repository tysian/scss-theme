@use 'sass:math';
@use './strip-unit' as *;

// Helper functions
@function to-relative-unit($val, $unit: 1rem, $base: 16px) {
  @if unit($val) != 'px' {
    @error 'Incorrect value unit provided: `#{unit($val)}`! Accepting: `px`.';
  }
  @return math.div($val, $base) * $unit;
}

@function relative-to-px($val, $base: 16px) {
  @if unit($val) != 'rem' and unit($val) != 'em' {
    @error 'Incorrect value unit provided: `#{unit($val)}`! Accepting: `rem` or `em`.';
  }

  @return strip-unit($val) * $base;
}

@function px-to-rem($val) {
  @return to-relative-unit($val, 1rem);
}

@function px-to-em($val) {
  @return to-relative-unit($val, 1em);
}

// Alias
@function rem-to-px($val) {
  @return relative-to-px($val);
}

@function du-to-rem($design-unit: 1) {
  @if type-of($design-unit) != 'number' {
    @error 'The provided value: `#{$design-unit}` is of incorrect type: `#{type-of($design-unit)}`. Type of `Number` is required!';
  }

  @if unitless($design-unit) {
    @return $design-unit * 0.25rem;
  }

  @return $design-unit;
}
